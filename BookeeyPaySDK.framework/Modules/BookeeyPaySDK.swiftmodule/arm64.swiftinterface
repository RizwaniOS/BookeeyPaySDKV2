// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BookeeyPaySDK
@_exported import BookeeyPaySDK
import CommonCrypto
import Swift
import UIKit
import WebKit
@objc public protocol BookeeyPayDelegate {
  @objc func paymentSuccessCallBack(transactionData: BookeeyPaySDK.BookeeySuccessResponse)
  @objc func paymentFailueCallBack(transactionFailureData: BookeeyPaySDK.BookeeyFailResponse)
  @objc func paymentCancel(transactionFailureData: BookeeyPaySDK.BookeeyErrorResponse)
}
@objc public protocol BookeeyLoadWalletDelegate {
  @objc func loadWalletSuccessCallBack(transactionData: BookeeyPaySDK.BookeeySuccessResponse)
  @objc func loadWalletPaymentCancel(transactionFailureData: BookeeyPaySDK.BookeeyErrorResponse)
  @objc func loadWalletFailureCallBack(transactionFailureData: BookeeyPaySDK.BookeeyFailResponse)
}
@objc public protocol BookeeySplitPaymentDelegate {
  @objc func splitPaymentSuccessCallBack(transactionData: BookeeyPaySDK.BookeeySuccessResponse)
  @objc func splitPaymentFailureCallBack(transactionFailureData: BookeeyPaySDK.BookeeyFailResponse)
  @objc func splitPaymentCancel(transactionFailureData: BookeeyPaySDK.BookeeyErrorResponse)
}
@_hasMissingDesignatedInitializers @objc public class PaymentViewController : UIKit.UIViewController {
  @objc public var environMent: BookeeyPaySDK.SDKEnvironment
  @objc public var sdkApiRequestType: BookeeyPaySDK.SDKApiRequestType
  @objc public var payDelegate: BookeeyPaySDK.BookeeyPayDelegate?
  @objc public var loadWalletDelegate: BookeeyPaySDK.BookeeyLoadWalletDelegate?
  @objc public var splitPaymentDelegate: BookeeyPaySDK.BookeeySplitPaymentDelegate?
  @objc public var payLoadRequest: BookeeyPaySDK.PayloadRequestModel?
  @objc public var loadWalletRequest: BookeeyPaySDK.LoadWalletRequestModel?
  @objc public var splitPaymentRequest: BookeeyPaySDK.SplitPaymentRequestModel?
  @objc public var themeColor: UIKit.UIColor?
  @objc public var tintColor: UIKit.UIColor?
  @objc public var titleColor: UIKit.UIColor?
  @objc public var cancelButtonTitle: Swift.String?
  @objc public var alertButtonTitle: Swift.String?
  @objc public var headerTitle: Swift.String?
  @objc public var merchantSecretKey: Swift.String?
  @objc public var merchantId: Swift.String?
  @objc public var isCancelButtonEnabled: Swift.Bool
  @objc public var cancelBarButton: UIKit.UIBarButtonItem!
  @objc public var paymentMethod: Swift.String?
  public var delegate: BookeeyPaySDK.BookeeyPayDelegate?
  @objc public init(payLoadModel: BookeeyPaySDK.PayloadRequestModel? = nil, loadWalletModel: BookeeyPaySDK.LoadWalletRequestModel? = nil, splitPaymentModel: BookeeyPaySDK.SplitPaymentRequestModel? = nil)
  @objc override dynamic public func viewDidLoad()
  @objc public func walletAlonePayment()
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc deinit
}
extension PaymentViewController : WebKit.WKNavigationDelegate {
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, didStartProvisionalNavigation navigation: WebKit.WKNavigation!)
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: Swift.Error)
}
public class SDKModel {
  public init()
  public func printnnn()
  @objc deinit
}
@objc public enum SDKEnvironment : Swift.Int {
  case test = 0
  case live = 1
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum SDKApiRequestType : Swift.Int {
  case loadWallet = 0
  case paySdk = 1
  case splitPayment = 2
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class BookeeySuccessResponse : ObjectiveC.NSObject {
  final public let merchantTxnId: Swift.String
  final public let transactionId: Swift.String
  final public let errorCode: Swift.String
  final public let capturedAmount: Swift.String
  final public let pgRef: Swift.String
  final public let payMethod: Swift.String
  final public let dOResponse: Swift.String
  final public let tOResponse: Swift.String
  final public let payStat: Swift.String
  final public let walletBalance: Swift.String
  final public let errorDescription: Swift.String
  final public let walletTrackUID: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class BookeeyFailResponse : ObjectiveC.NSObject {
  final public let merchantTxnId: Swift.String
  final public let transactionId: Swift.String
  final public let errorCode: Swift.String
  final public let capturedAmount: Swift.String
  final public let pgRef: Swift.String
  final public let payMethod: Swift.String
  final public let dOResponse: Swift.String
  final public let tOResponse: Swift.String
  final public let payStat: Swift.String
  final public let walletBalance: Swift.String
  final public let errorDescription: Swift.String
  final public let walletTrackUID: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class BookeeyErrorResponse : ObjectiveC.NSObject {
  final public let merchantTxnId: Swift.String
  final public let errorMessage: Swift.String
  final public let errorCode: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayloadRequestModel : ObjectiveC.NSObject, Swift.Codable {
  public var DBRqst: Swift.String
  public var Do_Appinfo: BookeeyPaySDK.AppInfoModel
  public var Do_MerchDtl: BookeeyPaySDK.MerchantInfoModel
  public var Do_PyrDtl: BookeeyPaySDK.PayerInfoModel
  public var Do_TxnDtl: [BookeeyPaySDK.TransactionDetailModel]
  public var Do_TxnHdr: BookeeyPaySDK.TransactionHdrModel
  public var Do_MoreDtl: BookeeyPaySDK.MoreDetail
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public struct LoadModel : Swift.Codable {
  public var DBRqst: Swift.String
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@objc public class LoadWalletRequestModel : ObjectiveC.NSObject, Swift.Codable {
  public var DBRqst: Swift.String
  public var Do_Appinfo: BookeeyPaySDK.AppInfoModel
  public var Do_MerchAuth: BookeeyPaySDK.MerchantAuthModel
  public var Do_Dvcinfo: BookeeyPaySDK.DeviceInfoModel
  public var Do_TxnDtl: BookeeyPaySDK.LoadTransactionDetailModel
  public var Do_UsrDtl: BookeeyPaySDK.UserDetailInfoModel
  public var Do_WltDtl: BookeeyPaySDK.WalletKeyInfoModel
  public init(DBRqst: Swift.String = "Ld_Wlt", Do_MerchAuth: BookeeyPaySDK.MerchantAuthModel = MerchantAuthModel(), Do_Appinfo: BookeeyPaySDK.AppInfoModel = AppInfoModel(), Do_Dvcinfo: BookeeyPaySDK.DeviceInfoModel = DeviceInfoModel(), Do_TxnDtl: BookeeyPaySDK.LoadTransactionDetailModel = LoadTransactionDetailModel(), Do_UsrDtl: BookeeyPaySDK.UserDetailInfoModel = UserDetailInfoModel(), Do_WltDtl: BookeeyPaySDK.WalletKeyInfoModel = WalletKeyInfoModel())
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
  @objc override dynamic public init()
  @objc deinit
}
@objc public class SplitPaymentRequestModel : ObjectiveC.NSObject, Swift.Codable {
  public var DBRqst: Swift.String
  public var Do_Appinfo: BookeeyPaySDK.AppInfoModel
  public var Do_Dvcinfo: BookeeyPaySDK.DeviceInfoModel
  public var Do_TxnHdr: BookeeyPaySDK.SplitPaymentTransactionHdrModel
  public var Do_TxnDtl: [BookeeyPaySDK.SplitPaymentTransactionDetailModel]
  public var Do_MerchDtl: BookeeyPaySDK.MerchantInfoModel
  public var Do_PyrDtl: BookeeyPaySDK.PayerInfoModel
  public var Do_MerchAuth: BookeeyPaySDK.MerchantAuthModel
  public var Do_MoreDtl: BookeeyPaySDK.MoreDetail
  public var Do_UsrAuth: BookeeyPaySDK.UsrAuthModel
  public var Do_WltDtl: BookeeyPaySDK.WalletKeyInfoModel
  public var merchantKey: Swift.String
  public init(DBRqst: Swift.String = "Ld_Pay", Do_Appinfo: BookeeyPaySDK.AppInfoModel = AppInfoModel(), Do_Dvcinfo: BookeeyPaySDK.DeviceInfoModel = DeviceInfoModel(), Do_TxnHdr: BookeeyPaySDK.SplitPaymentTransactionHdrModel = SplitPaymentTransactionHdrModel(), Do_TxnDtl: [BookeeyPaySDK.SplitPaymentTransactionDetailModel] = [SplitPaymentTransactionDetailModel](), Do_MerchDtl: BookeeyPaySDK.MerchantInfoModel = MerchantInfoModel(), Do_PyrDtl: BookeeyPaySDK.PayerInfoModel = PayerInfoModel(), Do_MerchAuth: BookeeyPaySDK.MerchantAuthModel = MerchantAuthModel(), Do_MoreDtl: BookeeyPaySDK.MoreDetail = MoreDetail(), Do_UsrAuth: BookeeyPaySDK.UsrAuthModel = UsrAuthModel(), Do_WltDtl: BookeeyPaySDK.WalletKeyInfoModel = WalletKeyInfoModel(), merchantKey: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class MerchantInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var MerchUID: Swift.String
  public var BKY_PRDENUM: Swift.String
  public var SURL: Swift.String
  public var FURL: Swift.String
  public init(MerchUID: Swift.String = "", BKY_PRDENUM: Swift.String = "", SURL: Swift.String = "https://www.bookeey.com/portal/paymentSuccess", FURL: Swift.String = "https://demo.bookeey.com/portal/paymentfailure")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers @objc public class TransactionHdrModel : ObjectiveC.NSObject, Swift.Codable {
  public var Merch_Txn_UID: Swift.String
  public var PayFor: Swift.String
  public var Paymethod: Swift.String
  public var Txn_HDR: Swift.String
  public var hashMac: Swift.String
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class SplitPaymentTransactionDetailModel : ObjectiveC.NSObject, Swift.Codable {
  public var SubMerchUID: Swift.String
  public var Amount: Swift.String
  public var PayMthd: Swift.String
  public var TxnType: Swift.String
  public init(SubMerchUID: Swift.String = "", Amount: Swift.String = "", PayMthd: Swift.String = "", TxnType: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class SplitPaymentTransactionHdrModel : ObjectiveC.NSObject, Swift.Codable {
  public var Merch_Txn_UID: Swift.String
  public var PayFor: Swift.String
  public var BKY_Txn_UID: Swift.String
  public var Txn_HDR: Swift.String
  public var hashMac: Swift.String
  public init(Merch_Txn_UID: Swift.String = "", PayFor: Swift.String = "ECom", BKY_Txn_UID: Swift.String = "", Txn_HDR: Swift.String = "", hashMac: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class UserDetailInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var WltID: Swift.String
  public var MPhoneNo: Swift.String
  public var UserName: Swift.String
  public init(WltID: Swift.String = "", MPhoneNo: Swift.String = "", UserName: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class WalletKeyInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var WltID: Swift.String
  public var WltKey: Swift.String
  public init(WltID: Swift.String = "", WltKey: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class MerchantAuthModel : ObjectiveC.NSObject, Swift.Codable {
  public var MerUID: Swift.String
  public var MerAuthCD: Swift.String
  public init(MerUID: Swift.String = "", MerAuthCD: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class UsrAuthModel : ObjectiveC.NSObject, Swift.Codable {
  public var UsrSessnUID: Swift.String
  public var AuthTyp: Swift.String
  public init(UsrSessnUID: Swift.String = "", AuthTyp: Swift.String = "3")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public struct TransactionDetailModel : Swift.Codable {
  public var SubMerchUID: Swift.String
  public var Txn_AMT: Swift.String
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@objc public class AppInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var APIVer: Swift.String
  public var APPID: Swift.String
  public var APPTyp: Swift.String
  public var AppVer: Swift.String
  public var Country: Swift.String
  public var DevcType: Swift.String
  public var HsCode: Swift.String
  public var IPAddrs: Swift.String
  public var MdlID: Swift.String
  public var OS: Swift.String
  public var UsrSessID: Swift.String
  public init(APIVer: Swift.String = "1.0", APPID: Swift.String = "PG", APPTyp: Swift.String = "MAPP", AppVer: Swift.String = "1.0", Country: Swift.String = "", DevcType: Swift.String = "", HsCode: Swift.String = "", IPAddrs: Swift.String = "", MdlID: Swift.String = "Pay_Req", OS: Swift.String = "", UsrSessID: Swift.String = "")
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
  @objc override dynamic public init()
  @objc deinit
}
@objc public class DeviceInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var DevID: Swift.String
  public var DevOS: Swift.String
  public var DevcTyp: Swift.String
  public var MPhnOprtr: Swift.String
  public var MPhnSIMID: Swift.String
  public init(DevID: Swift.String = "", DevOS: Swift.String = "", DevcTyp: Swift.String = "", MPhnOprtr: Swift.String = "", MPhnSIMID: Swift.String = "")
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
  @objc override dynamic public init()
  @objc deinit
}
@objc public class LoadTransactionDetailModel : ObjectiveC.NSObject, Swift.Codable {
  public var Comission: Swift.String
  public var Merch_Txn_UID: Swift.String
  public var PayMthd: Swift.String
  public var SURL: Swift.String
  public var FURL: Swift.String
  public var Amount: Swift.String
  public var TxnType: Swift.String
  public init(Comission: Swift.String = "", Merch_Txn_UID: Swift.String = "", PayMthd: Swift.String = "", SURL: Swift.String = "https://www.bookeey.com/portal/paymentSuccess", FURL: Swift.String = "https://www.bookeey.com/portal/paymentfailure", Amount: Swift.String = "", TxnType: Swift.String = "")
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
  @objc override dynamic public init()
  @objc deinit
}
@objc public class LoadWallet : ObjectiveC.NSObject, Swift.Codable {
  final public let loadWalletResponse: BookeeyPaySDK.LoadWalletResponse?
  final public let TrackUID: Swift.String?
  final public let MerchTxnUId: Swift.String?
  final public let Captured_AMT: Swift.String?
  final public let DOResponse: Swift.String?
  final public let TOResponse: Swift.String?
  final public let PGRef: Swift.String?
  final public let PayStat: Swift.String?
  final public let PayMethod: Swift.String?
  final public let Wlt_Bal: Swift.String?
  final public let ErrorCD: Swift.String?
  final public let ErrorDesc: Swift.String?
  final public let WalletTrackUID: Swift.String?
  final public let IsWltAlone: Swift.Bool?
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class LoadWalletResponse : ObjectiveC.NSObject, Swift.Codable {
  final public let paymentUrl: Swift.String?
  final public let errorMessage: Swift.String?
  final public let paymentGateway: Swift.String?
  final public let walletKey: Swift.String?
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class MoreDetail : ObjectiveC.NSObject, Swift.Codable {
  public var Cart: Swift.String
  public init(Cart: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class MoreDetailInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var Cust_Data1: Swift.String
  public var Cust_Data2: Swift.String
  public var Cust_Data3: Swift.String
  public init(Cust_Data1: Swift.String = "", Cust_Data2: Swift.String = "", Cust_Data3: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@objc public class PayerInfoModel : ObjectiveC.NSObject, Swift.Codable {
  public var Pyr_MPhone: Swift.String
  public var Pyr_Name: Swift.String
  public init(Pyr_MPhone: Swift.String = "", Pyr_Name: Swift.String = "")
  @objc override dynamic public init()
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
extension BookeeyPaySDK.SDKEnvironment : Swift.Equatable {}
extension BookeeyPaySDK.SDKEnvironment : Swift.Hashable {}
extension BookeeyPaySDK.SDKEnvironment : Swift.RawRepresentable {}
extension BookeeyPaySDK.SDKApiRequestType : Swift.Equatable {}
extension BookeeyPaySDK.SDKApiRequestType : Swift.Hashable {}
extension BookeeyPaySDK.SDKApiRequestType : Swift.RawRepresentable {}
